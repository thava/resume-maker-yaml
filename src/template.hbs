<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{name}} - {{title}}</title>
  <link rel="stylesheet" href="./style.css">
  <style>
    :root {
      --color-primary: {{theme.colors.primary}};
      --color-secondary: {{theme.colors.secondary}};
      --color-tertiary: {{theme.colors.tertiary}};
      --color-accent: {{theme.colors.accent}};
      --font-heading: '{{theme.fonts.heading}}', serif;
      --font-body: '{{theme.fonts.body}}', sans-serif;
    }
  </style>
</head>
<body class="font-body">
  <!-- Theme Switcher & Dark Mode Toggle -->
  <div class="fixed top-4 right-4 flex gap-2 z-50 print:hidden">
    <!-- Theme Switcher -->
    <button id="themeSwitcher" class="p-1.5 rounded-lg bg-transparent cursor-pointer text-gray-600 dark:text-gray-400" title="Switch Theme">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"></path>
      </svg>
    </button>

    <!-- Dark Mode Toggle -->
    <button id="darkModeToggle" class="p-1.5 rounded-lg bg-transparent cursor-pointer text-gray-600 dark:text-gray-400" title="Toggle Dark Mode">
      <!-- Sun icon (shown in dark mode) -->
      <svg id="sunIcon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
      </svg>
      <!-- Moon icon (shown in light mode) -->
      <svg id="moonIcon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20">
        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
      </svg>
    </button>
  </div>

  <!-- Theme Name Display -->
  <div id="themeNotification" class="fixed top-16 right-4 px-3 py-1.5 rounded-md bg-gray-800 text-white text-sm shadow-lg opacity-0 transition-opacity duration-300 z-50 print:hidden">
    <span id="themeNameDisplay"></span>
  </div>

  <div class="max-w-5xl mx-auto px-6 md:px-12 lg:px-16 py-12 sm:py-16">
    <!-- Header -->
    <header class="text-center mb-6 no-page-break">
      <h1 class="font-heading text-2xl sm:text-3xl font-bold mb-1" style="color: var(--color-primary);">
        {{name}}
      </h1>
      <h2 class="text-xl sm:text-2xl font-light mb-3" style="color: var(--color-secondary);">
        {{title}}
      </h2>

      <!-- Contact Info -->
      <div class="flex flex-wrap justify-center gap-4 text-sm text-gray-600 dark:text-gray-400">
        {{#if contact.address}}
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          <span>{{contact.address}}</span>
        </div>
        {{/if}}
        {{#if contact.phone}}
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
          </svg>
          <span>{{contact.phone}}</span>
        </div>
        {{/if}}
        {{#if contact.email}}
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          <span>{{contact.email}}</span>
        </div>
        {{/if}}
        {{#if contact.linkedin}}
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
          </svg>
          <a href="https://{{contact.linkedin}}" target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-400 cursor-pointer">{{contact.linkedin}}</a>
        </div>
        {{/if}}
      </div>
    </header>

    {{#if objective}}
    <!-- Objective Section -->
    <section class="mb-10 no-page-break">
      <!--
      <h3 class="text-xl sm:text-2xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
           OBJECTIVE
      </h3>           -->
      <p class="text-base leading-relaxed text-gray-700 dark:text-gray-300">
        {{objective}}
      </p>
    </section>
    {{/if}}

    {{#if certifications}}
    <!-- Certifications Section -->
    <section class="mb-10 no-page-break">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        CERTIFICATIONS
      </h3>
      <ul class="space-y-2 ml-5">
        {{#each certifications}}
        <li class="text-base text-gray-700 dark:text-gray-300 leading-relaxed list-disc">{{this}}</li>
        {{/each}}
      </ul>
    </section>
    {{/if}}

    {{#if achievements}}
    <!-- Achievements Section -->
    <section class="mb-10 no-page-break">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        ACHIEVEMENTS
      </h3>
      <ul class="space-y-2 ml-5">
        {{#each achievements}}
        <li class="text-base text-gray-700 dark:text-gray-300 leading-relaxed list-disc">{{this}}</li>
        {{/each}}
      </ul>
    </section>
    {{/if}}

    {{#if skills}}
    <!-- Skills Section -->
    <section class="mb-10 no-page-break">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        SKILLS
      </h3>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
        {{#each skills}}
        <div class="flex items-start gap-2">
          <svg class="w-5 h-5 mt-0.5 flex-shrink-0" style="color: var(--color-accent);" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-base text-gray-700 dark:text-gray-300">{{this}}</span>
        </div>
        {{/each}}
      </div>
    </section>
    {{/if}}

    {{#if experience}}
    <!-- Work Experience Section -->
    <section class="mb-10">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        PROFESSIONAL EXPERIENCE
      </h3>
      {{#each experience}}
      <div class="mb-8 {{#if pageBreakAfter}}page-break{{/if}} no-page-break">
        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start mb-3">
          <div>
            <h4 class="text-lg font-semibold" style="color: var(--color-tertiary);">{{title}}</h4>
            <p class="text-gray-600 dark:text-gray-400">{{company}}</p>
          </div>
          <p class="text-sm italic text-gray-500 dark:text-gray-500 mt-1 sm:mt-0">{{duration}}</p>
        </div>
        {{#if responsibilities}}
        <ul class="space-y-2 ml-5">
          {{#each responsibilities}}
            {{#if (isString this)}}
              <li class="text-base text-gray-700 dark:text-gray-300 leading-relaxed list-disc">{{this}}</li>
            {{else if (isObject this)}}
              {{#each this}}
                {{#if @first}}
                  <li class="text-base text-gray-700 dark:text-gray-300 leading-relaxed list-disc font-semibold" style="color: var(--color-accent);">{{@key}}:</li>
                  <ul class="space-y-1 ml-5 mt-1">
                    {{#each this}}
                      {{#if (isString this)}}
                        <li class="text-base text-gray-700 dark:text-gray-300 leading-relaxed list-disc">{{this}}</li>
                      {{/if}}
                    {{/each}}
                  </ul>
                {{/if}}
              {{/each}}
            {{/if}}
          {{/each}}
        </ul>
        {{/if}}
        {{#if skills}}
        <div class="mt-3">
          <span class="text-sm font-semibold text-gray-600 dark:text-gray-400">Technologies:</span>
          <div class="flex flex-wrap gap-2 mt-2">
            {{#each skills}}
            <span class="px-2 py-1 text-sm rounded-md bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-300 dark:border-gray-600">{{this}}</span>
            {{/each}}
          </div>
        </div>
        {{/if}}
      </div>
      {{/each}}
    </section>
    {{/if}}

    {{#if education}}
    <!-- Education Section -->
    <section class="mb-10">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        EDUCATION
      </h3>
      {{#each education}}
      <div class="mb-6 {{#if pageBreakAfter}}page-break{{/if}} no-page-break">
        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start">
          <div>
            <h4 class="text-lg font-semibold" style="color: var(--color-accent);">{{degree}}</h4>
            <p class="text-gray-600 dark:text-gray-400">{{institution}}</p>
          </div>
          <p class="text-sm italic text-gray-500 dark:text-gray-500 mt-1 sm:mt-0">{{duration}}</p>
        </div>
      </div>
      {{/each}}
    </section>
    {{/if}}

    {{#if interests}}
    <!-- Interests Section -->
    <section class="mb-10 no-page-break">
      <h3 class="text-lg sm:text-xl font-heading font-semibold mb-4 pb-2 border-b-2" style="color: var(--color-primary); border-color: var(--color-secondary);">
        INTERESTS
      </h3>
      <div class="space-y-3">
        {{#each interests}}
        <div>
          <span class="text-base font-semibold" style="color: var(--color-accent);">{{title}}:</span>
          <span class="text-base text-gray-700 dark:text-gray-300">{{description}}</span>
        </div>
        {{/each}}
      </div>
    </section>
    {{/if}}
  </div>

  <script type="module">
    // Embed all themes
    const allThemes = {{{json allThemes}}};
    const themeKeys = Object.keys(allThemes);
    let currentThemeIndex = themeKeys.indexOf('{{currentTheme}}');
    if (currentThemeIndex === -1) currentThemeIndex = 0;

    // Load saved theme from localStorage
    const savedTheme = localStorage.getItem('selectedTheme');
    if (savedTheme && allThemes[savedTheme]) {
      currentThemeIndex = themeKeys.indexOf(savedTheme);
      applyTheme(savedTheme);
    }

    // Function to apply theme
    function applyTheme(themeName) {
      const theme = allThemes[themeName];
      if (!theme) return;

      // Update CSS variables
      document.documentElement.style.setProperty('--color-primary', theme.colors.primary);
      document.documentElement.style.setProperty('--color-secondary', theme.colors.secondary);
      document.documentElement.style.setProperty('--color-tertiary', theme.colors.tertiary);
      document.documentElement.style.setProperty('--color-accent', theme.colors.accent);
      document.documentElement.style.setProperty('--font-heading', `'${theme.fonts.heading}', serif`);
      document.documentElement.style.setProperty('--font-body', `'${theme.fonts.body}', sans-serif`);

      // Save to localStorage
      localStorage.setItem('selectedTheme', themeName);

      // Show notification
      showThemeNotification(theme.name);
    }

    // Function to show theme notification
    function showThemeNotification(themeName) {
      const notification = document.getElementById('themeNotification');
      const nameDisplay = document.getElementById('themeNameDisplay');
      nameDisplay.textContent = themeName;

      notification.style.opacity = '1';
      setTimeout(() => {
        notification.style.opacity = '0';
      }, 2000);
    }

    // Theme switcher
    const themeSwitcher = document.getElementById('themeSwitcher');
    themeSwitcher.addEventListener('click', () => {
      currentThemeIndex = (currentThemeIndex + 1) % themeKeys.length;
      const newTheme = themeKeys[currentThemeIndex];
      applyTheme(newTheme);
    });

    // Dark mode toggle
    const darkModeToggle = document.getElementById('darkModeToggle');
    const html = document.documentElement;
    const sunIcon = document.getElementById('sunIcon');
    const moonIcon = document.getElementById('moonIcon');

    // Function to update dark mode icon
    function updateDarkModeIcon() {
      if (html.classList.contains('dark')) {
        sunIcon.classList.remove('hidden');
        moonIcon.classList.add('hidden');
      } else {
        sunIcon.classList.add('hidden');
        moonIcon.classList.remove('hidden');
      }
    }

    // Load saved dark mode preference
    const savedDarkMode = localStorage.getItem('darkMode');
    if (savedDarkMode === 'true') {
      html.classList.add('dark');
    } else if (savedDarkMode === 'false') {
      html.classList.remove('dark');
    } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      html.classList.add('dark');
    }

    // Initialize icon
    updateDarkModeIcon();

    darkModeToggle.addEventListener('click', () => {
      html.classList.toggle('dark');
      localStorage.setItem('darkMode', html.classList.contains('dark'));
      updateDarkModeIcon();
    });
  </script>
</body>
</html>
